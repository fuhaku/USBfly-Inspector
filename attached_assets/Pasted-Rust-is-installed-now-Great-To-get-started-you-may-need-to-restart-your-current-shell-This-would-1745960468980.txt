Rust is installed now. Great!

To get started you may need to restart your current shell.
This would reload your PATH environment variable to include
Cargo's bin directory ($HOME/.cargo/bin).

To configure your current shell, you need to source
the corresponding env file under $HOME/.cargo.

This is usually done by running one of the following (note the leading DOT):
. "$HOME/.cargo/env"            # For sh/bash/zsh/ash/dash/pdksh
source "$HOME/.cargo/env.fish"  # For fish
source "$HOME/.cargo/env.nu"    # For nushell
fuhaku@Jasons-MacBook-Pro USBfly-Inspector % cargo build --release
    Updating crates.io index
  Downloaded cfg_aliases v0.1.1
  Downloaded clap_derive v4.5.32
  Downloaded hexf-parse v0.2.1
  Downloaded iced_graphics v0.9.0
  Downloaded block2 v0.5.1
  Downloaded block-sys v0.1.0-beta.1
  Downloaded bitflags v1.3.2
  Downloaded lazy_static v1.5.0
  Downloaded lock_api v0.4.12
  Downloaded objc2-encode v2.0.0-pre.2
  Downloaded objc2 v0.5.2
  Downloaded objc2-quartz-core v0.2.2
  Downloaded raw-window-handle v0.5.2
  Downloaded resvg v0.35.0
  Downloaded objc2-foundation v0.2.2
  Downloaded profiling v1.0.16
  Downloaded rangemap v1.5.1
  Downloaded png v0.17.16
  Downloaded phf v0.11.3
  Downloaded pin-project-lite v0.2.16
  Downloaded phf_shared v0.11.3
  Downloaded phf_macros v0.11.3
  Downloaded parking_lot v0.12.3
  Downloaded palette_derive v0.6.1
  Downloaded regex v1.11.1
  Downloaded wgpu-hal v0.16.2
  Downloaded unicode-width v0.1.14
  Downloaded syn v2.0.101
  Downloaded palette v0.6.1
  Downloaded zerocopy v0.8.25
  Downloaded swash v0.1.19
  Downloaded skrifa v0.22.3
  Downloaded winit v0.28.7
  Downloaded wgpu-core v0.16.1
  Downloaded tiny-skia v0.10.0
  Downloaded once_cell v1.21.3
  Downloaded objc_id v0.1.1
  Downloaded rayon v1.10.0
  Downloaded read-fonts v0.22.7
  Downloaded pico-args v0.5.0
  Downloaded phf_generator v0.11.3
  Downloaded option-ext v0.2.0
  Downloaded rctree v0.5.0
  Downloaded rayon-core v1.12.1
  Downloaded zerocopy v0.7.35
  Downloaded winnow v0.7.7
  Downloaded wgpu v0.16.3
  Downloaded ttf-parser v0.19.2
  Downloaded parking_lot_core v0.9.10
  Downloaded palette_derive v0.7.6
  Downloaded jpeg-decoder v0.3.1
  Downloaded regex-automata v0.4.9
  Downloaded palette v0.7.6
  Downloaded rustybuzz v0.8.0
  Downloaded tokio v1.44.2
  Downloaded ttf-parser v0.18.1
  Downloaded mio v1.0.3
  Downloaded metal v0.24.0
  Downloaded libc v0.2.172
  Downloaded itertools v0.11.0
  Downloaded unicode-segmentation v1.12.0
  Downloaded toml_edit v0.22.26
  Downloaded time v0.3.41
  Downloaded serde_json v1.0.140
  Downloaded quote v1.0.40
  Downloaded qoi v0.4.1
  Downloaded proc-macro2 v1.0.95
  Downloaded pretty_env_logger v0.5.0
  Downloaded ppv-lite86 v0.2.21
  Downloaded pkg-config v0.3.32
  Downloaded renderdoc-sys v1.1.0
  Downloaded kurbo v0.9.5
  Downloaded powerfmt v0.2.0
  Downloaded naga v0.12.3
  Downloaded indexmap v2.9.0
  Downloaded iced_widget v0.1.3
  Downloaded toml v0.8.22
  Downloaded cosmic-text v0.9.0
  Downloaded lyon_tessellation v1.0.15
  Downloaded rustybuzz v0.7.0
  Downloaded usvg-parser v0.35.0
  Downloaded unicode-bidi v0.3.18
  Downloaded tinyvec v1.9.0
  Downloaded gif v0.12.0
  Downloaded regex-syntax v0.8.5
  Downloaded indexmap v1.9.3
  Downloaded iced_wgpu v0.11.1
  Downloaded zeno v0.2.3
  Downloaded wgpu-types v0.16.1
  Downloaded weezl v0.1.8
  Downloaded unicode-script v0.5.7
  Downloaded unicode-ident v1.0.18
  Downloaded unicode-general-category v0.6.0
  Downloaded toml v0.5.11
  Downloaded tiny-skia-path v0.10.0
  Downloaded slotmap v1.0.7
  Downloaded serde_derive v1.0.219
  Downloaded serde v1.0.219
  Downloaded objc_exception v0.1.2
  Downloaded objc2-metal v0.2.2
  Downloaded miniz_oxide v0.8.8
  Downloaded lyon_path v1.0.7
  Downloaded lyon_geom v1.0.6
  Downloaded lru v0.11.1
  Downloaded log v0.4.27
  Downloaded libloading v0.7.4
  Downloaded tiff v0.9.1
  Downloaded lebe v0.5.2
  Downloaded rustversion v1.0.20
  Downloaded rustc-hash v1.1.0
  Downloaded rusb v0.9.4
  Downloaded roxmltree v0.18.1
  Downloaded khronos-egl v4.1.0
  Downloaded zune-inflate v0.2.54
  Downloaded xmlparser v0.13.6
  Downloaded utf8parse v0.2.2
  Downloaded usvg v0.35.0
  Downloaded twox-hash v1.6.3
  Downloaded time-macros v0.2.22
  Downloaded thiserror-impl v1.0.69
  Downloaded thiserror v1.0.69
  Downloaded svgtypes v0.11.0
  Downloaded softbuffer v0.2.1
  Downloaded socket2 v0.5.9
  Downloaded smallvec v1.15.0
  Downloaded ryu v1.0.20
  Downloaded iced v0.10.0
  Downloaded ash v0.37.3+1.3.251
  Downloaded objc2-encode v4.1.0
  Downloaded num-conv v0.1.0
  Downloaded memmap2 v0.6.2
  Downloaded lyon_algorithms v1.0.5
  Downloaded lyon v1.0.1
  Downloaded rustc_version v0.4.1
  Downloaded rgb v0.8.50
  Downloaded rfd v0.12.1
  Downloaded objc2-app-kit v0.2.2
  Downloaded libusb1-sys v0.7.0
  Downloaded jobserver v0.1.33
  Downloaded itoa v1.0.15
  Downloaded is_terminal_polyfill v1.70.1
  Downloaded is-terminal v0.4.16
  Downloaded imagesize v0.12.0
  Downloaded iced_winit v0.10.1
  Downloaded iced_tiny_skia v0.1.0
  Downloaded iced_style v0.9.0
  Downloaded iced_style v0.8.0
  Downloaded iced_runtime v0.1.1
  Downloaded yazi v0.1.6
  Downloaded window_clipboard v0.3.0
  Downloaded usvg-tree v0.35.0
  Downloaded usvg-text-layout v0.35.0
  Downloaded unicode-linebreak v0.1.5
  Downloaded unicode-bidi-mirroring v0.1.0
  Downloaded toml_write v0.1.1
  Downloaded toml_datetime v0.6.9
  Downloaded time-core v0.1.4
  Downloaded sys-locale v0.3.2
  Downloaded strum_macros v0.25.3
  Downloaded strsim v0.11.1
  Downloaded static_assertions v1.1.0
  Downloaded spirv v0.2.0+1.5.4
  Downloaded semver v1.0.26
  Downloaded glam v0.24.2
  Downloaded objc2 v0.3.0-beta.3.patch-leaks.3
  Downloaded libm v0.2.13
  Downloaded unicode-xid v0.2.6
  Downloaded unicode-ccc v0.1.2
  Downloaded tokio-macros v2.5.0
  Downloaded termcolor v1.4.1
  Downloaded glyphon v0.3.0
  Downloaded exr v1.73.0
  Downloaded clap_builder v4.5.37
  Downloaded aho-corasick v1.1.3
  Downloaded objc2-core-image v0.2.2
  Downloaded objc2-core-data v0.2.2
  Downloaded objc-sys v0.3.5
  Downloaded objc-sys v0.2.0-beta.2
  Downloaded objc-foundation v0.1.1
  Downloaded num_threads v0.1.7
  Downloaded num_cpus v1.16.0
  Downloaded num-derive v0.4.2
  Downloaded instant v0.1.13
  Downloaded xmlwriter v0.1.0
  Downloaded siphasher v1.0.1
  Downloaded simplecss v0.2.2
  Downloaded signal-hook-registry v1.4.5
  Downloaded shlex v1.3.0
  Downloaded serde_spanned v0.6.8
  Downloaded iced_renderer v0.1.0
  Downloaded iced_native v0.10.3
  Downloaded hashbrown v0.15.2
  Downloaded hashbrown v0.12.3
  Downloaded half v2.6.0
  Downloaded glow v0.12.3
  Downloaded fontdb v0.14.1
  Downloaded flate2 v1.1.1
  Downloaded euclid v0.22.11
  Downloaded crossbeam-channel v0.5.15
  Downloaded cc v1.2.20
  Downloaded bytes v1.10.1
  Downloaded bytemuck v1.23.0
  Downloaded base64 v0.21.7
  Downloaded libloading v0.8.6
  Downloaded svg_fmt v0.4.5
  Downloaded strum v0.25.0
  Downloaded strict-num v0.1.1
  Downloaded simd-adler32 v0.3.7
  Downloaded iced_futures v0.6.0
  Downloaded iced_core v0.10.0
  Downloaded futures v0.3.31
  Downloaded fdeflate v0.3.7
  Downloaded env_logger v0.10.2
  Downloaded crossbeam-utils v0.8.21
  Downloaded crossbeam-epoch v0.9.18
  Downloaded crossbeam-deque v0.8.6
  Downloaded crc32fast v1.4.2
  Downloaded core-graphics v0.22.3
  Downloaded codespan-reporting v0.11.1
  Downloaded cocoa v0.24.1
  Downloaded clap v4.5.37
  Downloaded bitflags v2.9.0
  Downloaded arrayvec v0.7.6
  Downloaded anyhow v1.0.98
  Downloaded anstream v0.6.18
  Downloaded allocator-api2 v0.2.21
  Downloaded ahash v0.8.11
  Downloaded unicode-vo v0.1.0
  Downloaded scopeguard v1.2.0
  Downloaded iced_futures v0.7.0
  Downloaded iced_core v0.9.0
  Downloaded gif v0.13.1
  Downloaded getrandom v0.2.16
  Downloaded futures-executor v0.3.31
  Downloaded futures-channel v0.3.31
  Downloaded embed-resource v2.5.1
  Downloaded data-url v0.2.0
  Downloaded core-foundation-sys v0.8.7
  Downloaded anstyle v1.0.10
  Downloaded humantime v2.2.0
  Downloaded hex v0.4.3
  Downloaded heck v0.4.1
  Downloaded guillotiere v0.6.2
  Downloaded gpu-alloc v0.5.4
  Downloaded font-types v0.7.3
  Downloaded float-cmp v0.9.0
  Downloaded find-crate v0.6.3
  Downloaded fast-srgb8 v1.0.0
  Downloaded etagere v0.2.15
  Downloaded either v1.15.0
  Downloaded dispatch v0.2.0
  Downloaded dirs-sys v0.4.1
  Downloaded directories v5.0.1
  Downloaded deranged v0.4.0
  Downloaded colorchoice v1.0.3
  Downloaded cocoa-foundation v0.1.2
  Downloaded clap_lex v0.7.4
  Downloaded bytemuck_derive v1.9.3
  Downloaded by_address v1.2.1
  Downloaded block2 v0.2.0-alpha.6
  Downloaded bit-vec v0.6.3
  Downloaded bit-set v0.5.3
  Downloaded autocfg v1.4.0
  Downloaded approx v0.5.1
  Downloaded anstyle-query v1.1.2
  Downloaded anstyle-parse v0.2.6
  Downloaded adler2 v2.0.0
  Downloaded gpu-descriptor-types v0.1.2
  Downloaded gpu-descriptor v0.2.4
  Downloaded gpu-alloc-types v0.2.0
  Downloaded foreign-types-shared v0.1.1
  Downloaded foreign-types v0.3.2
  Downloaded float_next_after v1.0.0
  Downloaded equivalent v1.0.2
  Downloaded core-graphics-types v0.1.3
  Downloaded color_quant v1.1.0
  Downloaded clipboard_macos v0.1.1
  Downloaded block v0.1.6
  Downloaded bit_field v0.10.2
  Downloaded arrayref v0.3.9
  Downloaded aliasable v0.1.3
  Downloaded image v0.24.9
  Downloaded 282 crates (32.6 MB) in 17.63s (largest was `image` at 9.3 MB)
   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling libc v0.2.172
   Compiling autocfg v1.4.0
   Compiling cfg-if v1.0.0
   Compiling libm v0.2.13
   Compiling bitflags v1.3.2
   Compiling log v0.4.27
   Compiling shlex v1.3.0
   Compiling arrayvec v0.7.6
   Compiling smallvec v1.15.0
   Compiling thiserror v1.0.69
   Compiling rand_core v0.6.4
   Compiling siphasher v1.0.1
   Compiling version_check v0.9.5
   Compiling core-foundation-sys v0.8.7
   Compiling zerocopy v0.8.25
   Compiling phf_shared v0.11.3
   Compiling memchr v2.7.4
   Compiling rand v0.8.5
   Compiling crossbeam-utils v0.8.21
   Compiling simd-adler32 v0.3.7
   Compiling cc v1.2.20
   Compiling serde v1.0.219
   Compiling foreign-types-shared v0.1.1
   Compiling block v0.1.6
   Compiling parking_lot_core v0.9.10
   Compiling static_assertions v1.1.0
   Compiling foreign-types v0.3.2
   Compiling raw-window-handle v0.5.2
   Compiling adler2 v2.0.0
   Compiling unicode-general-category v0.6.0
   Compiling scopeguard v1.2.0
   Compiling miniz_oxide v0.8.8
   Compiling bitflags v2.9.0
   Compiling slotmap v1.0.7
   Compiling phf_generator v0.11.3
   Compiling crc32fast v1.4.2
   Compiling pin-project-lite v0.2.16
   Compiling num-traits v0.2.19
   Compiling lock_api v0.4.12
   Compiling slab v0.4.9
   Compiling once_cell v1.21.3
   Compiling by_address v1.2.1
   Compiling palette v0.7.6
   Compiling objc_exception v0.1.2
   Compiling futures-sink v0.3.31
   Compiling futures-core v0.3.31
   Compiling malloc_buf v0.0.6
   Compiling core-foundation v0.9.4
   Compiling getrandom v0.2.16
   Compiling rayon-core v1.12.1
   Compiling float-cmp v0.9.0
   Compiling strict-num v0.1.1
   Compiling futures-channel v0.3.31
   Compiling core-graphics-types v0.1.3
   Compiling flate2 v1.1.1
   Compiling termcolor v1.4.1
   Compiling arrayref v0.3.9
   Compiling ttf-parser v0.19.2
   Compiling fast-srgb8 v1.0.0
   Compiling pin-utils v0.1.0
   Compiling unicode-ccc v0.1.2
   Compiling futures-io v0.3.31
   Compiling crossbeam-epoch v0.9.18
   Compiling futures-task v0.3.31
   Compiling quote v1.0.40
   Compiling crossbeam-deque v0.8.6
   Compiling unicode-script v0.5.7
   Compiling syn v2.0.101
   Compiling ppv-lite86 v0.2.21
   Compiling unicode-bidi-mirroring v0.1.0
   Compiling parking_lot v0.12.3
   Compiling tinyvec_macros v0.1.1
   Compiling num_cpus v1.16.0
   Compiling tinyvec v1.9.0
   Compiling memmap2 v0.6.2
   Compiling indexmap v1.9.3
   Compiling kurbo v0.9.5
   Compiling siphasher v0.3.11
   Compiling rand_chacha v0.3.1
   Compiling either v1.15.0
   Compiling cfg_aliases v0.1.1
   Compiling weezl v0.1.8
   Compiling unicode-bidi v0.3.18
   Compiling approx v0.5.1
   Compiling euclid v0.22.11
   Compiling bit-vec v0.6.3
   Compiling unicode-width v0.1.14
   Compiling rctree v0.5.0
   Compiling rustc-hash v1.1.0
   Compiling khronos-egl v4.1.0
   Compiling hashbrown v0.12.3
   Compiling rayon v1.10.0
   Compiling svgtypes v0.11.0
   Compiling codespan-reporting v0.11.1
   Compiling bit-set v0.5.3
   Compiling twox-hash v1.6.3
   Compiling fontdb v0.14.1
   Compiling ahash v0.8.11
   Compiling fdeflate v0.3.7
   Compiling libloading v0.7.4
   Compiling half v2.6.0
   Compiling lyon_geom v1.0.6
   Compiling color_quant v1.1.0
   Compiling unicode-xid v0.2.6
   Compiling xmlparser v0.13.6
   Compiling hexf-parse v0.2.1
   Compiling objc-sys v0.3.5
   Compiling ttf-parser v0.18.1
   Compiling lyon_path v1.0.7
   Compiling roxmltree v0.18.1
   Compiling png v0.17.16
   Compiling core-graphics v0.22.3
   Compiling wgpu-types v0.16.1
   Compiling simplecss v0.2.2
   Compiling libloading v0.8.6
   Compiling imagesize v0.12.0
   Compiling zerocopy v0.7.35
   Compiling glow v0.12.3
   Compiling unicode-vo v0.1.0
   Compiling unicode-segmentation v1.12.0
   Compiling yazi v0.1.6
   Compiling profiling v1.0.16
   Compiling zeno v0.2.3
   Compiling data-url v0.2.0
   Compiling sys-locale v0.3.2
   Compiling svg_fmt v0.4.5
   Compiling rangemap v1.5.1
   Compiling allocator-api2 v0.2.21
   Compiling aliasable v0.1.3
   Compiling xmlwriter v0.1.0
   Compiling objc2-encode v4.1.0
   Compiling syn v1.0.109
   Compiling glam v0.24.2
   Compiling objc-sys v0.2.0-beta.2
   Compiling base64 v0.21.7
   Compiling jpeg-decoder v0.3.1
   Compiling pico-args v0.5.0
   Compiling unicode-linebreak v0.1.5
   Compiling objc2 v0.5.2
   Compiling hashbrown v0.14.5
   Compiling gif v0.12.0
   Compiling toml v0.5.11
   Compiling softbuffer v0.2.1
   Compiling mio v1.0.3
   Compiling socket2 v0.5.9
   Compiling signal-hook-registry v1.4.5
   Compiling float_next_after v1.0.0
   Compiling equivalent v1.0.2
   Compiling semver v1.0.26
   Compiling bytes v1.10.1
   Compiling hashbrown v0.15.2
   Compiling bytemuck_derive v1.9.3
   Compiling thiserror-impl v1.0.69
   Compiling phf_macros v0.11.3
   Compiling palette_derive v0.7.6
   Compiling futures-macro v0.3.31
   Compiling tokio-macros v2.5.0
   Compiling indexmap v2.9.0
   Compiling find-crate v0.6.3
   Compiling objc2-foundation v0.2.2
   Compiling lru v0.11.1
   Compiling phf v0.11.3
   Compiling lyon_tessellation v1.0.15
   Compiling tokio v1.44.2
   Compiling bytemuck v1.23.0
   Compiling etagere v0.2.15
   Compiling futures-util v0.3.31
   Compiling lyon_algorithms v1.0.5
   Compiling serde_spanned v0.6.8
   Compiling toml_datetime v0.6.9
   Compiling pkg-config v0.3.32
   Compiling winnow v0.7.7
   Compiling toml_write v0.1.1
   Compiling palette v0.6.1
   Compiling tiny-skia-path v0.10.0
   Compiling font-types v0.7.3
   Compiling naga v0.12.3
   Compiling rustybuzz v0.7.0
   Compiling read-fonts v0.22.7
   Compiling rustybuzz v0.8.0
   Compiling rgb v0.8.50
   Compiling usvg-tree v0.35.0
   Compiling tiny-skia v0.10.0
   Compiling usvg-parser v0.35.0
   Compiling objc2-app-kit v0.2.2
   Compiling libusb1-sys v0.7.0
   Compiling lyon v1.0.1
   Compiling objc2-encode v2.0.0-pre.2
   Compiling toml_edit v0.22.26
   Compiling guillotiere v0.6.2
   Compiling winit v0.28.7
   Compiling aho-corasick v1.1.3
   Compiling regex-syntax v0.8.5
   Compiling rustversion v1.0.20
   Compiling palette_derive v0.6.1
   Compiling dispatch v0.2.0
   Compiling usvg-text-layout v0.35.0
   Compiling utf8parse v0.2.2
   Compiling anstyle-parse v0.2.6
   Compiling usvg v0.35.0
   Compiling futures-executor v0.3.31
   Compiling futures v0.3.31
   Compiling resvg v0.35.0
   Compiling objc v0.2.7
   Compiling metal v0.24.0
   Compiling cocoa-foundation v0.1.2
   Compiling regex-automata v0.4.9
   Compiling toml v0.8.22
   Compiling cocoa v0.24.1
   Compiling objc2 v0.3.0-beta.3.patch-leaks.3
   Compiling rustc_version v0.4.1
   Compiling iced_core v0.10.0
   Compiling clipboard_macos v0.1.1
   Compiling skrifa v0.22.3
   Compiling iced_graphics v0.9.0
   Compiling wgpu-hal v0.16.2
   Compiling iced_futures v0.7.0
   Compiling iced_style v0.9.0
   Compiling zune-inflate v0.2.54
   Compiling iced_runtime v0.1.1
   Compiling instant v0.1.13
   Compiling anstyle-query v1.1.2
   Compiling is_terminal_polyfill v1.70.1
   Compiling colorchoice v1.0.3
   Compiling bit_field v0.10.2
   Compiling anstyle v1.0.10
   Compiling lebe v0.5.2
   Compiling exr v1.73.0
   Compiling anstream v0.6.18
   Compiling embed-resource v2.5.1
   Compiling regex v1.11.1
   Compiling window_clipboard v0.3.0
   Compiling iced_core v0.9.0
   Compiling objc_id v0.1.1
   Compiling qoi v0.4.1
   Compiling serde_derive v1.0.219
   Compiling tiff v0.9.1
   Compiling gif v0.13.1
   Compiling is-terminal v0.4.16
   Compiling heck v0.4.1
   Compiling itoa v1.0.15
   Compiling strsim v0.11.1
   Compiling heck v0.5.0
   Compiling option-ext v0.2.0
   Compiling rusb v0.9.4
   Compiling swash v0.1.19
   Compiling powerfmt v0.2.0
   Compiling clap_lex v0.7.4
   Compiling wgpu-core v0.16.1
   Compiling anyhow v1.0.98
   Compiling humantime v2.2.0
   Compiling byteorder v1.5.0
   Compiling serde_json v1.0.140
   Compiling rfd v0.12.1
   Compiling env_logger v0.10.2
   Compiling iced_winit v0.10.1
   Compiling clap_builder v4.5.37
   Compiling deranged v0.4.0
   Compiling clap_derive v4.5.32
   Compiling dirs-sys v0.4.1
   Compiling strum_macros v0.25.3
   Compiling iced_style v0.8.0
   Compiling objc-foundation v0.1.1
   Compiling usbfly v0.1.0 (/Users/fuhaku/Gits/USBfly-Inspector)
warning: unused import: `std::process::Command`
 --> build.rs:1:5
  |
1 | use std::process::Command;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `usbfly` (build script) generated 1 warning
   Compiling iced_futures v0.6.0
   Compiling num_threads v0.1.7
   Compiling num-conv v0.1.0
   Compiling image v0.24.9
   Compiling ryu v1.0.20
   Compiling time-core v0.1.4
   Compiling time v0.3.41
   Compiling iced_native v0.10.3
   Compiling strum v0.25.0
   Compiling wgpu v0.16.3
   Compiling clap v4.5.37
   Compiling cosmic-text v0.9.0
   Compiling glyphon v0.3.0
   Compiling iced_wgpu v0.11.1
   Compiling iced_tiny_skia v0.1.0
   Compiling iced_renderer v0.1.0
   Compiling iced_widget v0.1.3
   Compiling directories v5.0.1
   Compiling pretty_env_logger v0.5.0
   Compiling num-derive v0.4.2
   Compiling itertools v0.11.0
   Compiling crossbeam-channel v0.5.15
   Compiling hex v0.4.3
   Compiling lazy_static v1.5.0
   Compiling iced v0.10.0
warning: unused imports: `Canvas`, `Column`, `Row`, and `text_input`
 --> src/gui/views/device_view.rs:1:58
  |
1 | use iced::widget::{button, column, container, row, text, text_input, Canvas, Column, Row};
  |                                                          ^^^^^^^^^^  ^^^^^^  ^^^^^^  ^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::gui::styles`
 --> src/gui/views/device_view.rs:3:5
  |
3 | use crate::gui::styles;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `Row`
 --> src/gui/views/traffic_view.rs:1:90
  |
1 | use iced::widget::{button, column, container, row, scrollable, text, text_input, Column, Row};
  |                                                                                          ^^^

warning: unused import: `Row`
 --> src/gui/views/descriptor_view.rs:1:78
  |
1 | use iced::widget::{button, column, container, row, scrollable, text, Column, Row};
  |                                                                              ^^^

warning: unused import: `std::collections::HashMap`
 --> src/usb/descriptors.rs:6:5
  |
6 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `error`, and `warn`
 --> src/usb/decoder.rs:3:11
  |
3 | use log::{debug, error, warn};
  |           ^^^^^  ^^^^^  ^^^^

warning: variable does not need to be mutable
  --> src/cynthion/connection.rs:38:13
   |
38 |         let mut handle = device.open()?;
   |             ----^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: constant `CYNTHION_OUT_EP` is never used
  --> src/cynthion/connection.rs:11:7
   |
11 | const CYNTHION_OUT_EP: u8 = 0x01;
   |       ^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: methods `read_data`, `send_command`, `get_device_info`, and `is_connected` are never used
   --> src/cynthion/connection.rs:72:18
    |
21  | impl CynthionConnection {
    | ----------------------- methods in this implementation
...
72  |     pub async fn read_data(&mut self) -> Result<Vec<u8>> {
    |                  ^^^^^^^^^
...
131 |     pub fn send_command(&mut self, command: &[u8]) -> Result<()> {
    |            ^^^^^^^^^^^^
...
151 |     pub fn get_device_info(&mut self) -> Result<String> {
    |            ^^^^^^^^^^^^^^^
...
157 |     pub fn is_connected(&self) -> bool {
    |            ^^^^^^^^^^^^

warning: function `get_vendor_ids` is never used
  --> src/data/vendor_ids.rs:79:8
   |
79 | pub fn get_vendor_ids() -> Vec<(u16, String)> {
   |        ^^^^^^^^^^^^^^

warning: function `get_subclass_description` is never used
  --> src/data/class_codes.rs:96:8
   |
96 | pub fn get_subclass_description(class_code: u8, subclass_code: u8) -> Option<String> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_protocol_description` is never used
   --> src/data/class_codes.rs:100:8
    |
100 | pub fn get_protocol_description(class_code: u8, subclass_code: u8, protocol_code: u8) -> O...
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_class_codes` is never used
   --> src/data/class_codes.rs:104:8
    |
104 | pub fn get_class_codes() -> Vec<(u8, String)> {
    |        ^^^^^^^^^^^^^^^

warning: function `get_descriptor_types` is never used
  --> src/data/descriptor_types.rs:41:8
   |
41 | pub fn get_descriptor_types() -> Vec<(u8, String)> {
   |        ^^^^^^^^^^^^^^^^^^^^

warning: variant `DeviceSelected` is never constructed
  --> src/gui/views/device_view.rs:21:5
   |
19 | pub enum Message {
   |          ------- variant in this enum
20 |     RefreshDevices,
21 |     DeviceSelected(String),
   |     ^^^^^^^^^^^^^^
   |
   = note: `Message` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: function `labeled_value` is never used
 --> src/gui/widgets.rs:6:8
  |
6 | pub fn labeled_value<'a, Message>(
  |        ^^^^^^^^^^^^^

warning: function `hex_dump` is never used
  --> src/gui/widgets.rs:29:8
   |
29 | pub fn hex_dump<'a, Message>(
   |        ^^^^^^^^

warning: methods `get_hints` and `resolve_string_descriptor` are never used
   --> src/usb/decoder.rs:134:12
    |
27  | impl USBDecoder {
    | --------------- methods in this implementation
...
134 |     pub fn get_hints(&self, descriptor: &USBDescriptor) -> Vec<String> {
    |            ^^^^^^^^^
...
138 |     pub fn resolve_string_descriptor(&self, index: u8) -> Option<&String> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: structure field `bLength` should have a snake case name
  --> src/usb/descriptors.rs:25:9
   |
25 |     pub bLength: u8,
   |         ^^^^^^^ help: convert the identifier to snake case: `b_length`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: structure field `bDescriptorType` should have a snake case name
  --> src/usb/descriptors.rs:26:9
   |
26 |     pub bDescriptorType: u8,
   |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_descriptor_type`

warning: structure field `bcdUSB` should have a snake case name
  --> src/usb/descriptors.rs:27:9
   |
27 |     pub bcdUSB: u16,
   |         ^^^^^^ help: convert the identifier to snake case: `bcd_usb`

warning: structure field `bDeviceClass` should have a snake case name
  --> src/usb/descriptors.rs:28:9
   |
28 |     pub bDeviceClass: u8,
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `b_device_class`

warning: structure field `bDeviceSubClass` should have a snake case name
  --> src/usb/descriptors.rs:29:9
   |
29 |     pub bDeviceSubClass: u8,
   |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_device_sub_class`

warning: structure field `bDeviceProtocol` should have a snake case name
  --> src/usb/descriptors.rs:30:9
   |
30 |     pub bDeviceProtocol: u8,
   |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_device_protocol`

warning: structure field `bMaxPacketSize0` should have a snake case name
  --> src/usb/descriptors.rs:31:9
   |
31 |     pub bMaxPacketSize0: u8,
   |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_max_packet_size0`

warning: structure field `idVendor` should have a snake case name
  --> src/usb/descriptors.rs:32:9
   |
32 |     pub idVendor: u16,
   |         ^^^^^^^^ help: convert the identifier to snake case: `id_vendor`

warning: structure field `idProduct` should have a snake case name
  --> src/usb/descriptors.rs:33:9
   |
33 |     pub idProduct: u16,
   |         ^^^^^^^^^ help: convert the identifier to snake case: `id_product`

warning: structure field `bcdDevice` should have a snake case name
  --> src/usb/descriptors.rs:34:9
   |
34 |     pub bcdDevice: u16,
   |         ^^^^^^^^^ help: convert the identifier to snake case: `bcd_device`

warning: structure field `iManufacturer` should have a snake case name
  --> src/usb/descriptors.rs:35:9
   |
35 |     pub iManufacturer: u8,
   |         ^^^^^^^^^^^^^ help: convert the identifier to snake case: `i_manufacturer`

warning: structure field `iProduct` should have a snake case name
  --> src/usb/descriptors.rs:36:9
   |
36 |     pub iProduct: u8,
   |         ^^^^^^^^ help: convert the identifier to snake case: `i_product`

warning: structure field `iSerialNumber` should have a snake case name
  --> src/usb/descriptors.rs:37:9
   |
37 |     pub iSerialNumber: u8,
   |         ^^^^^^^^^^^^^ help: convert the identifier to snake case: `i_serial_number`

warning: structure field `bNumConfigurations` should have a snake case name
  --> src/usb/descriptors.rs:38:9
   |
38 |     pub bNumConfigurations: u8,
   |         ^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_num_configurations`

warning: structure field `bLength` should have a snake case name
  --> src/usb/descriptors.rs:76:9
   |
76 |     pub bLength: u8,
   |         ^^^^^^^ help: convert the identifier to snake case: `b_length`

warning: structure field `bDescriptorType` should have a snake case name
  --> src/usb/descriptors.rs:77:9
   |
77 |     pub bDescriptorType: u8,
   |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_descriptor_type`

warning: structure field `wTotalLength` should have a snake case name
  --> src/usb/descriptors.rs:78:9
   |
78 |     pub wTotalLength: u16,
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `w_total_length`

warning: structure field `bNumInterfaces` should have a snake case name
  --> src/usb/descriptors.rs:79:9
   |
79 |     pub bNumInterfaces: u8,
   |         ^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_num_interfaces`

warning: structure field `bConfigurationValue` should have a snake case name
  --> src/usb/descriptors.rs:80:9
   |
80 |     pub bConfigurationValue: u8,
   |         ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_configuration_value`

warning: structure field `iConfiguration` should have a snake case name
  --> src/usb/descriptors.rs:81:9
   |
81 |     pub iConfiguration: u8,
   |         ^^^^^^^^^^^^^^ help: convert the identifier to snake case: `i_configuration`

warning: structure field `bmAttributes` should have a snake case name
  --> src/usb/descriptors.rs:82:9
   |
82 |     pub bmAttributes: u8,
   |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `bm_attributes`

warning: structure field `bMaxPower` should have a snake case name
  --> src/usb/descriptors.rs:83:9
   |
83 |     pub bMaxPower: u8,
   |         ^^^^^^^^^ help: convert the identifier to snake case: `b_max_power`

warning: structure field `bLength` should have a snake case name
   --> src/usb/descriptors.rs:119:9
    |
119 |     pub bLength: u8,
    |         ^^^^^^^ help: convert the identifier to snake case: `b_length`

warning: structure field `bDescriptorType` should have a snake case name
   --> src/usb/descriptors.rs:120:9
    |
120 |     pub bDescriptorType: u8,
    |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_descriptor_type`

warning: structure field `bInterfaceNumber` should have a snake case name
   --> src/usb/descriptors.rs:121:9
    |
121 |     pub bInterfaceNumber: u8,
    |         ^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_interface_number`

warning: structure field `bAlternateSetting` should have a snake case name
   --> src/usb/descriptors.rs:122:9
    |
122 |     pub bAlternateSetting: u8,
    |         ^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_alternate_setting`

warning: structure field `bNumEndpoints` should have a snake case name
   --> src/usb/descriptors.rs:123:9
    |
123 |     pub bNumEndpoints: u8,
    |         ^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_num_endpoints`

warning: structure field `bInterfaceClass` should have a snake case name
   --> src/usb/descriptors.rs:124:9
    |
124 |     pub bInterfaceClass: u8,
    |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_interface_class`

warning: structure field `bInterfaceSubClass` should have a snake case name
   --> src/usb/descriptors.rs:125:9
    |
125 |     pub bInterfaceSubClass: u8,
    |         ^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_interface_sub_class`

warning: structure field `bInterfaceProtocol` should have a snake case name
   --> src/usb/descriptors.rs:126:9
    |
126 |     pub bInterfaceProtocol: u8,
    |         ^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_interface_protocol`

warning: structure field `iInterface` should have a snake case name
   --> src/usb/descriptors.rs:127:9
    |
127 |     pub iInterface: u8,
    |         ^^^^^^^^^^ help: convert the identifier to snake case: `i_interface`

warning: structure field `bLength` should have a snake case name
   --> src/usb/descriptors.rs:156:9
    |
156 |     pub bLength: u8,
    |         ^^^^^^^ help: convert the identifier to snake case: `b_length`

warning: structure field `bDescriptorType` should have a snake case name
   --> src/usb/descriptors.rs:157:9
    |
157 |     pub bDescriptorType: u8,
    |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_descriptor_type`

warning: structure field `bEndpointAddress` should have a snake case name
   --> src/usb/descriptors.rs:158:9
    |
158 |     pub bEndpointAddress: u8,
    |         ^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_endpoint_address`

warning: structure field `bmAttributes` should have a snake case name
   --> src/usb/descriptors.rs:159:9
    |
159 |     pub bmAttributes: u8,
    |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `bm_attributes`

warning: structure field `wMaxPacketSize` should have a snake case name
   --> src/usb/descriptors.rs:160:9
    |
160 |     pub wMaxPacketSize: u16,
    |         ^^^^^^^^^^^^^^ help: convert the identifier to snake case: `w_max_packet_size`

warning: structure field `bInterval` should have a snake case name
   --> src/usb/descriptors.rs:161:9
    |
161 |     pub bInterval: u8,
    |         ^^^^^^^^^ help: convert the identifier to snake case: `b_interval`

warning: structure field `bLength` should have a snake case name
   --> src/usb/descriptors.rs:201:9
    |
201 |     pub bLength: u8,
    |         ^^^^^^^ help: convert the identifier to snake case: `b_length`

warning: structure field `bDescriptorType` should have a snake case name
   --> src/usb/descriptors.rs:202:9
    |
202 |     pub bDescriptorType: u8,
    |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_descriptor_type`

warning: structure field `wLANGID` should have a snake case name
   --> src/usb/descriptors.rs:203:9
    |
203 |     pub wLANGID: Option<Vec<u16>>, // Only for string descriptor 0
    |         ^^^^^^^ help: convert the identifier to snake case: `w_langid`

warning: structure field `bLength` should have a snake case name
   --> src/usb/descriptors.rs:255:9
    |
255 |     pub bLength: u8,
    |         ^^^^^^^ help: convert the identifier to snake case: `b_length`

warning: structure field `bDescriptorType` should have a snake case name
   --> src/usb/descriptors.rs:256:9
    |
256 |     pub bDescriptorType: u8,
    |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_descriptor_type`

warning: structure field `bcdHID` should have a snake case name
   --> src/usb/descriptors.rs:257:9
    |
257 |     pub bcdHID: u16,
    |         ^^^^^^ help: convert the identifier to snake case: `bcd_hid`

warning: structure field `bCountryCode` should have a snake case name
   --> src/usb/descriptors.rs:258:9
    |
258 |     pub bCountryCode: u8,
    |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `b_country_code`

warning: structure field `bNumDescriptors` should have a snake case name
   --> src/usb/descriptors.rs:259:9
    |
259 |     pub bNumDescriptors: u8,
    |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_num_descriptors`

warning: structure field `bDescriptorType2` should have a snake case name
   --> src/usb/descriptors.rs:260:9
    |
260 |     pub bDescriptorType2: u8,
    |         ^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `b_descriptor_type2`

warning: structure field `wDescriptorLength` should have a snake case name
   --> src/usb/descriptors.rs:261:9
    |
261 |     pub wDescriptorLength: u16,
    |         ^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `w_descriptor_length`

warning: `usbfly` (bin "usbfly") generated 65 warnings (run `cargo fix --bin "usbfly"` to apply 7 suggestions)
    Finished `release` profile [optimized] target(s) in 2m 42s